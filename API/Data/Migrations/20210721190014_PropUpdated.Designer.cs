// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210721190014_PropUpdated")]
    partial class PropUpdated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("API.Controllers.Entities.InventoryItemSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AvgPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumItems")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductPurchaseOrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductsSellOrderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductPurchaseOrderId");

                    b.HasIndex("ProductsSellOrderId");

                    b.ToTable("InventoryItemSummaries");
                });

            modelBuilder.Entity("API.Controllers.Entities.InventorySummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("InventorySummaries");
                });

            modelBuilder.Entity("API.Controllers.Entities.ProductPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductPurchaseOrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantityPrice")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductPurchaseOrderId");

                    b.ToTable("ProductPrices");
                });

            modelBuilder.Entity("API.Controllers.Entities.ProductPurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InventorySummaryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Item")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumItems")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductType")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InventorySummaryId");

                    b.ToTable("ProductPurchaseOrders");
                });

            modelBuilder.Entity("API.Controllers.Entities.ProductsSellOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSold")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Item")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemSold")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumItems")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ProductsSellOrders");
                });

            modelBuilder.Entity("API.Controllers.Entities.InventoryItemSummary", b =>
                {
                    b.HasOne("API.Controllers.Entities.ProductPurchaseOrder", "Products")
                        .WithMany("ItemSummaries")
                        .HasForeignKey("ProductPurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Controllers.Entities.ProductsSellOrder", null)
                        .WithMany("ItemSummaries")
                        .HasForeignKey("ProductsSellOrderId");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("API.Controllers.Entities.ProductPrice", b =>
                {
                    b.HasOne("API.Controllers.Entities.ProductPurchaseOrder", "Products")
                        .WithMany("ProductPrices")
                        .HasForeignKey("ProductPurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("API.Controllers.Entities.ProductPurchaseOrder", b =>
                {
                    b.HasOne("API.Controllers.Entities.InventorySummary", "InventorySummary")
                        .WithMany("Products")
                        .HasForeignKey("InventorySummaryId");

                    b.Navigation("InventorySummary");
                });

            modelBuilder.Entity("API.Controllers.Entities.InventorySummary", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("API.Controllers.Entities.ProductPurchaseOrder", b =>
                {
                    b.Navigation("ItemSummaries");

                    b.Navigation("ProductPrices");
                });

            modelBuilder.Entity("API.Controllers.Entities.ProductsSellOrder", b =>
                {
                    b.Navigation("ItemSummaries");
                });
#pragma warning restore 612, 618
        }
    }
}
